/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, InventoryData as PrismaInventoryData } from "@prisma/client";

export class InventoryDataServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.InventoryDataCountArgs, "select">
  ): Promise<number> {
    return this.prisma.inventoryData.count(args);
  }

  async inventoryDataItems(
    args: Prisma.InventoryDataFindManyArgs
  ): Promise<PrismaInventoryData[]> {
    return this.prisma.inventoryData.findMany(args);
  }
  async inventoryData(
    args: Prisma.InventoryDataFindUniqueArgs
  ): Promise<PrismaInventoryData | null> {
    return this.prisma.inventoryData.findUnique(args);
  }
  async createInventoryData(
    args: Prisma.InventoryDataCreateArgs
  ): Promise<PrismaInventoryData> {
    return this.prisma.inventoryData.create(args);
  }
  async updateInventoryData(
    args: Prisma.InventoryDataUpdateArgs
  ): Promise<PrismaInventoryData> {
    return this.prisma.inventoryData.update(args);
  }
  async deleteInventoryData(
    args: Prisma.InventoryDataDeleteArgs
  ): Promise<PrismaInventoryData> {
    return this.prisma.inventoryData.delete(args);
  }
}
